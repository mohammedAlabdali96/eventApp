[{"/home/mo/project/eventApp/App/client/src/App.js":"1","/home/mo/project/eventApp/App/client/src/index.js":"2","/home/mo/project/eventApp/App/client/src/components/Form/Form.js":"3","/home/mo/project/eventApp/App/client/src/styles.js":"4","/home/mo/project/eventApp/App/client/src/components/Form/styles.js":"5","/home/mo/project/eventApp/App/client/src/components/Posts/Post/Post.js":"6","/home/mo/project/eventApp/App/client/src/components/Posts/Posts.js":"7","/home/mo/project/eventApp/App/client/src/components/Posts/styles.js":"8","/home/mo/project/eventApp/App/client/src/components/Posts/Post/styles.js":"9","/home/mo/project/eventApp/App/client/src/reducers/posts.js":"10","/home/mo/project/eventApp/App/client/src/actions/posts.js":"11","/home/mo/project/eventApp/App/client/src/api/index.js":"12","/home/mo/project/eventApp/App/client/src/reducers/index.js":"13","/home/mo/project/eventApp/App/client/src/constants/actionTypes.js":"14"},{"size":1320,"mtime":1606748187998,"results":"15","hashOfConfig":"16"},{"size":454,"mtime":1606728682258,"results":"17","hashOfConfig":"16"},{"size":3709,"mtime":1606817173559,"results":"18","hashOfConfig":"16"},{"size":350,"mtime":1606410033062,"results":"19","hashOfConfig":"16"},{"size":463,"mtime":1606729061563,"results":"20","hashOfConfig":"16"},{"size":2371,"mtime":1606817340980,"results":"21","hashOfConfig":"16"},{"size":874,"mtime":1606741750106,"results":"22","hashOfConfig":"16"},{"size":265,"mtime":1606410617275,"results":"23","hashOfConfig":"16"},{"size":962,"mtime":1606410619607,"results":"24","hashOfConfig":"16"},{"size":512,"mtime":1606819440077,"results":"25","hashOfConfig":"16"},{"size":1260,"mtime":1606819436905,"results":"26","hashOfConfig":"16"},{"size":405,"mtime":1606816526573,"results":"27","hashOfConfig":"16"},{"size":112,"mtime":1606498512422,"results":"28","hashOfConfig":"16"},{"size":134,"mtime":1606819222866,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},"f3zxjp",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/mo/project/eventApp/App/client/src/App.js",["61"],"import React,{useState,useEffect} from 'react';\nimport{ Container, AppBar, Typography, Grow, Grid } from '@material-ui/core';\nimport Posts from './components/Posts/Posts';\nimport Form from './components/Form/Form'\nimport mm from './images/mm.png'\nimport useStyles from './styles'\nimport {useDispatch} from 'react-redux';\nimport { getPosts } from './actions/posts';\n\n\n\nconst App = () => {\n\n  const [currentId, setCurrentId ] = useState(null);\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  \n  useEffect(()=>{\n    dispatch(getPosts());\n  },[dispatch, currentId])\n\n  return (\n  <Container maxWidth='lg'>\n    <AppBar className={classes.appBar} position='static' color='inherit'>\n      <Typography className={classes.heading} varaint='h2' align=\"center\">Memories</Typography>\n      <img className={classes.img} src={mm} height=\"60\" />\n    </AppBar>\n    <Grow in>\n      <Container>\n        <Grid container justify=\"space-between\" alignItems=\"stretch\" spacing={3}>\n             <Grid item xs={12} sm={7}>\n                 <Posts setCurrentId={setCurrentId} />\n             </Grid>\n             <Grid item xs={12} sm={4}>\n                  <Form currentId={currentId} setCurrentId={setCurrentId} />\n             </Grid>\n        </Grid>\n      </Container>\n    </Grow>\n  </Container>\n  );\n}\n\nexport default App;\n","/home/mo/project/eventApp/App/client/src/index.js",[],"/home/mo/project/eventApp/App/client/src/components/Form/Form.js",["62","63"],"import React,{useState, useEffect} from 'react';\nimport { TextField, Button, Typography, paper, Paper } from \"@material-ui/core\"\nimport FileBase from 'react-file-base64'\nimport useStyles from './styles'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { createPost, updatePost } from '../../actions/posts';\n\n\n\n\nconst Form =({setCurrentId, currentId})=>{\n    const [postData, setPostData] = useState({ creator: '',title:'', message:'',tags:'',selectedFile:''});\n    const classes = useStyles()\n    const post = useSelector((state) => currentId ? state.posts.find((p)=> p._id === currentId ) : null);\n    const dispatch = useDispatch() \n\n    useEffect(()=>{\n        if(post) setPostData(post);\n\n    },[post])\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if(currentId) {\n          dispatch(updatePost(currentId,postData))\n\n        }\n        else {\n        dispatch(createPost(postData));\n        }\n        clear()\n    }\n\n    const clear = () => {\n        setCurrentId(null)\n        setPostData({ creator: '',title:'', message:'',tags:'',selectedFile:''})\n\n    }\n\n    return (\n        <Paper className={`${classes.root} ${classes.form}`}>\n            <form\n             autoComplete=\"off\" \n             noValidate \n             className={classes.form}\n             onSubmit={handleSubmit}\n             >\n                 <Typography variant=\"h6\">\n                     {currentId ? 'updating event' : 'Creating event'}\n                 </Typography>\n                 <TextField \n                 name=\"creator\"\n                 variant=\"outlined\"\n                 label= \"Creator\"\n                 fullWidth\n                 value={postData.creator}\n                 onChange={(e) => setPostData({...postData ,creator: e.target.value})}\n                 />\n                 <TextField \n                 name=\"title\"\n                 variant=\"outlined\"\n                 label= \"title\"\n                 fullWidth\n                 value={postData.title}\n                 onChange={(e) => setPostData({...postData ,title: e.target.value})}\n                 />\n                <TextField \n                 name=\"message\"\n                 variant=\"outlined\"\n                 label= \"message\"\n                 fullWidth\n                 value={postData.message}\n                 onChange={(e) => setPostData({...postData ,message: e.target.value})}\n                 />\n                <TextField \n                 name=\"tags\"\n                 variant=\"outlined\"\n                 label= \"tags\"\n                 fullWidth\n                 value={postData.tags}\n                 onChange={(e) => setPostData({...postData ,tags: e.target.value.split(',')})}\n                 />\n                 <div className={classes.fileInput}>\n                   <FileBase \n                   type=\"file\"\n                   multiple={false}\n                   onDone={({base64}) => setPostData({...postData, selectedFile: base64})}\n                   />\n                 </div>\n                 <Button \n                 className={classes.buttonSubmit} \n                 variant=\"contained\" \n                 color=\"primary\"\n                 size=\"large\"\n                 type=\"submit\"\n                 fullWidth\n                 >\n                     submit\n                 </Button>\n                 <Button \n                 className={classes.buttonSubmit} \n                 variant=\"contained\" \n                 color=\"secondary\"\n                 size=\"small\"\n                 fullWidth\n                 onClick={clear}\n                 fullWidth\n                 >\n                     Clear\n                 </Button>\n\n             </form>\n\n        </Paper>\n    )\n}\n\n\nexport default Form;","/home/mo/project/eventApp/App/client/src/styles.js",[],"/home/mo/project/eventApp/App/client/src/components/Form/styles.js",[],"/home/mo/project/eventApp/App/client/src/components/Posts/Post/Post.js",[],"/home/mo/project/eventApp/App/client/src/components/Posts/Posts.js",[],"/home/mo/project/eventApp/App/client/src/components/Posts/styles.js",[],["64","65"],"/home/mo/project/eventApp/App/client/src/components/Posts/Post/styles.js",[],"/home/mo/project/eventApp/App/client/src/reducers/posts.js",["66"],"/home/mo/project/eventApp/App/client/src/actions/posts.js",[],"/home/mo/project/eventApp/App/client/src/api/index.js",[],"/home/mo/project/eventApp/App/client/src/reducers/index.js",[],"/home/mo/project/eventApp/App/client/src/constants/actionTypes.js",[],{"ruleId":"67","severity":1,"message":"68","line":26,"column":7,"nodeType":"69","endLine":26,"endColumn":59},{"ruleId":"70","severity":1,"message":"71","line":2,"column":41,"nodeType":"72","messageId":"73","endLine":2,"endColumn":46},{"ruleId":"74","severity":1,"message":"75","line":107,"column":18,"nodeType":"76","endLine":107,"endColumn":27},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":4,"column":1,"nodeType":"83","endLine":17,"endColumn":2},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'paper' is defined but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-native-reassign",["84"],"no-negated-in-lhs",["85"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]